# Code generated by font_to_py.py.
# Font: wqy.ttf Char set:  0123456789
# Cmd: ./font_to_py.py -x -k chars.txt wqy.ttf 21 wqy1.py
version = '0.33'

def height():
    return 20

def baseline():
    return 20

def max_width():
    return 14

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 32

def max_ch():
    return 63

_font =\
b'\x0e\x00\x3f\xc0\x3f\xe0\x20\x70\x00\x30\x00\x30\x00\x70\x00\x60'\
b'\x00\xe0\x01\xc0\x03\x80\x03\x00\x03\x00\x07\x00\x06\x00\x00\x00'\
b'\x00\x00\x07\x00\x07\x00\x07\x00\x07\x00\x0e\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x0e\x00\x0f\xc0\x1d\xc0\x18\x60\x30\x60\x30\x70'\
b'\x30\xf0\x31\xb0\x31\xb0\x33\x30\x33\x30\x36\x30\x34\x30\x3c\x30'\
b'\x38\x30\x38\x70\x30\x60\x38\x60\x1c\xe0\x0f\xc0\x07\x00\x0e\x00'\
b'\x03\x80\x0f\x80\x3d\x80\x31\x80\x21\x80\x01\x80\x01\x80\x01\x80'\
b'\x01\x80\x01\x80\x01\x80\x01\x80\x01\x80\x01\x80\x01\x80\x01\x80'\
b'\x01\x80\x01\x80\x01\x80\x01\x80\x0e\x00\x1f\xc0\x3f\xe0\x30\xe0'\
b'\x00\x60\x00\x60\x00\x60\x00\x60\x00\xe0\x00\xc0\x00\xc0\x01\xc0'\
b'\x01\x80\x03\x00\x07\x00\x06\x00\x0c\x00\x1c\x00\x38\x00\x3f\xe0'\
b'\x3f\xe0\x0e\x00\x3f\xe0\x3f\xe0\x00\xe0\x00\xc0\x01\x80\x03\x80'\
b'\x07\x00\x0e\x00\x0f\x80\x0f\xe0\x00\xe0\x00\x60\x00\x70\x00\x70'\
b'\x00\x70\x00\x60\x00\x60\x30\xe0\x3f\xc0\x0f\x00\x0e\x00\x01\xc0'\
b'\x01\xc0\x03\xc0\x03\xc0\x06\xc0\x06\xc0\x0c\xc0\x0c\xc0\x18\xc0'\
b'\x18\xc0\x30\xc0\x30\xc0\x60\xc0\x7f\xf0\x7f\xf0\x00\xc0\x00\xc0'\
b'\x00\xc0\x00\xc0\x00\xc0\x0e\x00\x1f\xe0\x1f\xe0\x18\x00\x18\x00'\
b'\x18\x00\x18\x00\x18\x00\x1f\x80\x1f\xc0\x18\xe0\x00\x60\x00\x60'\
b'\x00\x70\x00\x70\x00\x70\x00\x60\x00\x60\x30\xe0\x3f\xc0\x0f\x00'\
b'\x0e\x00\x07\xe0\x0f\xe0\x18\x00\x18\x00\x38\x00\x30\x00\x31\x00'\
b'\x37\xc0\x3c\xe0\x38\x60\x30\x70\x30\x30\x30\x30\x30\x30\x30\x30'\
b'\x30\x70\x18\x60\x1c\xe0\x0f\xc0\x07\x00\x0e\x00\x3f\xe0\x3f\xe0'\
b'\x00\x60\x00\x60\x00\xc0\x00\xc0\x01\xc0\x01\x80\x01\x80\x03\x80'\
b'\x03\x00\x03\x00\x07\x00\x06\x00\x06\x00\x0e\x00\x0e\x00\x0c\x00'\
b'\x0c\x00\x1c\x00\x0e\x00\x1f\xc0\x3d\xe0\x30\x60\x30\x30\x30\x30'\
b'\x30\x30\x38\x60\x18\xe0\x0f\xc0\x0f\xc0\x18\xe0\x30\x70\x30\x30'\
b'\x60\x30\x60\x30\x70\x30\x30\x30\x38\xe0\x1f\xe0\x07\x80\x0e\x00'\
b'\x1f\xc0\x1f\xc0\x30\x60\x30\x60\x30\x60\x30\x60\x30\x70\x30\x70'\
b'\x30\x70\x30\x70\x38\xf0\x1f\xf0\x0f\x60\x00\x60\x00\x60\x00\x60'\
b'\x00\xe0\x11\xc0\x1f\x80\x1f\x00'

_index =\
b'\x00\x00\x2a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x54\x00\x7e\x00\xa8\x00\xd2\x00\xfc\x00\x26\x01\x50\x01'\
b'\x7a\x01\xa4\x01\xce\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\xf8\x01'

_mvfont = memoryview(_font)
_mvi = memoryview(_index)
ifb = lambda l : l[0] | (l[1] << 8)

def get_ch(ch):
    oc = ord(ch)
    ioff = 2 * (oc - 32 + 1) if oc >= 32 and oc <= 63 else 0
    doff = ifb(_mvi[ioff : ])
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((width - 1)//8 + 1) * 20
    return _mvfont[doff + 2:next_offs], 20, width
 
